on:
    push:
        branches: [main]
        paths:
            - packages/web/**
            - packages/data/**
            - .github/workflows/web.yml
    workflow_dispatch:
        inputs:
            stage:
                description: 'Stage to deploy (dev|prod)'
                required: true
                default: 'prod'

name: web
concurrency: ${{ github.workflow }}_${{ github.event.inputs.stage || 'dev' }}

permissions:
    contents: read
    packages: write

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest

        steps:
            - uses: AutoModality/action-clean@v1
            - name: Checkout
              uses: actions/checkout@v3

            - name: Evaluate stage config
              id: config
              run: |
                  if [ -z "${{ github.event.inputs.stage }}" ]; then
                    STAGE=dev
                  else
                    STAGE=${{ github.event.inputs.stage }}
                  fi

                  echo "stage=$STAGE" >> $GITHUB_OUTPUT
                  echo "tag=${{ github.run_number }}-${{ github.run_attempt }}-$STAGE" >> $GITHUB_OUTPUT

                  if [ "dev" == "$STAGE" ]; then
                    echo "port=7212" >> $GITHUB_OUTPUT
                  elif [ "prod" == "$STAGE" ]; then
                    echo "port=7211" >> $GITHUB_OUTPUT
                  else
                    echo "Unknown stage: $STAGE"
                    exit 1
                  fi

            - name: Setup docker
              uses: docker/setup-buildx-action@v1

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/build-push-action@v2
              with:
                  push: true
                  tags: ghcr.io/groundhq/ground-web:${{ steps.config.outputs.tag }}
                  context: '.'
                  file: ./packages/web/Dockerfile
                  cache-from: type=registry,ref=ghcr.io/groundhq/ground-web:cache
                  cache-to: type=registry,mode=max,ref=ghcr.io/groundhq/ground-web:cache

            - name: Deploy containers
              if: success()
              uses: appleboy/ssh-action@v0.1.7
              with:
                  host: ${{ vars.HOST }}
                  username: ${{ secrets.HOST_USERNAME }}
                  key: ${{ secrets.HOST_KEY }}
                  port: 22
                  script_stop: true
                  script: |
                      docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

                      docker system prune -af --filter until=30m

                      docker pull ghcr.io/groundhq/ground-web:${{ steps.config.outputs.tag }}

                      docker stop ground-web-${{ steps.config.outputs.stage }} || true
                      docker rm ground-web-${{ steps.config.outputs.stage }} || true
                      docker run \
                        --name ground-web-${{ steps.config.outputs.stage }} \
                        -p ${{ steps.config.outputs.port }}:3000 \
                        -e NODE_ENV=production \
                        -e STATE=${{ steps.config.outputs.stage }} \
                        -d \
                        --restart unless-stopped \
                        ghcr.io/groundhq/ground-web:${{ steps.config.outputs.tag }}
